[
{
    "model": "catv.video",
    "pk": "07023210-2555-49b1-bff1-fc9babb5f1c2",
    "fields": {
        "created_at": "2017-12-04T15:40:57.365Z",
        "updated_at": "2017-12-06T03:53:49.126Z",
        "identifier": 13,
        "youtube_video_id": "q_Qtc2p5gEM",
        "title": "Criando um cron job na Dreamhost para rodar a verifica\u00e7\u00e3o das URLs",
        "part": 8,
        "description": "Nesse v\u00eddeo adicionamos uma cron job na Dreamhost que vai rodar o comando de verifica\u00e7\u00e3o das URLs a cada 10 minutos.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nN/A\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nTAGS:\r\npython, django, dreamhost, devops, cron-job, command, fe-healthcheck-server",
        "slug": "parte-08-criando-um-cron-job-na-dreamhost-para-rodar-a-verificacao-das-urls",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "5d600cb2-665f-4c49-bbec-b152cdee3acc",
            "a8e07c64-d8ec-4cdb-8b52-541a863db639",
            "1578316d-9e42-4c53-9f62-57a292b5a69b",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "9371ba23-b321-43da-a382-e142e15c09e0",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "0f83a950-398d-45e7-9b3d-3a3a46315e2f",
    "fields": {
        "created_at": "2017-12-01T14:17:01.590Z",
        "updated_at": "2017-12-06T04:09:57.428Z",
        "identifier": 38,
        "youtube_video_id": "z7ITUFMY62k",
        "title": "Implementando a rota que baixa um arquivo espec\u00edfico",
        "part": 13,
        "description": "T\u00cdTULO:\r\nParte 13: Implementando a rota que baixa um arquivo espec\u00edfico\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo adicionei uma nova rota ao sistema que baixa um arquivo espec\u00edfico que o usu\u00e1rio solicita. Implementamos essa view usando como guia um teste unit\u00e1rio (TDD - criando os testes antes da implementa\u00e7\u00e3o).\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Roteiro: https://github.com/fernandoe/fe-arquivo-server/issues/15\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/c4c3fafd6146ad75bd822e6fa479c92fce34cfce\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/c/CodigoAbertoTV?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, django-rest-framework, apiview, file-response, download, fe-arquivo-server",
        "slug": "parte-13-implementando-a-rota-que-baixa-um-arquivo-especifico",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "195786c0-f499-42e4-bf9a-ac372a1a5959",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "7c21cfc6-5b70-4d0c-8d26-0d94f05783ba",
            "2d698c75-d77b-4ba9-bfe4-510c0f5487b7",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "fe684ab1-9e15-4cd6-b43f-5448b67eb85f",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "10c046f2-f795-4d72-a71c-f46cf37b1ff6",
    "fields": {
        "created_at": "2017-11-29T16:10:23.647Z",
        "updated_at": "2017-12-06T04:19:21.656Z",
        "identifier": 26,
        "youtube_video_id": "sUWIbywiZtU",
        "title": "Cria\u00e7\u00e3o da estrutura b\u00e1sica do projeto Django",
        "part": 1,
        "description": "T\u00cdTULO:\r\nParte 1: Cria\u00e7\u00e3o da estrutura b\u00e1sica do projeto Django\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fiz a cria\u00e7\u00e3o do projeto Django que vamos utilizar para o desenvolvimento do servi\u00e7o. Este \u00e9 o primeiro v\u00eddeo de uma s\u00e9rie onde vou gravar todo o trabalho de desenvolvimento realizado neste projeto. \r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/cd6997773d27e21ea1977b961e5c83f7130b27b4\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, startproject, pycharm, fe-arquivo-server",
        "slug": "parte-01-criacao-da-estrutura-basica-do-projeto-django",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "227fdebf-2763-4cb8-a755-e672461bf69f",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "493190e5-36c7-40f7-aa18-a23001547979"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "11ea4c4b-f287-4705-9a68-696076cad5ab",
    "fields": {
        "created_at": "2017-12-04T15:41:39.573Z",
        "updated_at": "2017-12-06T03:55:57.929Z",
        "identifier": 15,
        "youtube_video_id": "RFqXDaf0Ni4",
        "title": "Cria\u00e7\u00e3o do MySQL no DH e sua configura\u00e7\u00e3o de acesso com um arquivo .ini externo",
        "part": 10,
        "description": "Neste v\u00eddeo fa\u00e7o a cria\u00e7\u00e3o do banco de dados da aplica\u00e7\u00e3o (MySQL) dentro do servi\u00e7o Dreamhost e fa\u00e7o a configura\u00e7\u00e3o de acesso da aplica\u00e7\u00e3o usando um arquivo .ini externo a aplica\u00e7\u00e3o (para os dados como senha e endere\u00e7o do servidor n\u00e3o ficarem dentro do github).\r\nBonus: Tive que salvar minha cadelinha no meio do v\u00eddeo, ela prendeu a unha no pelo ao se co\u00e7ar. :)\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/4a1050858ff8920bfa2df258939f4e9bdea8e80c\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-10-criacao-do-mysql-no-dh-e-sua-configuracao-de-acesso-com-um-arquivo-ini-externo",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "9371ba23-b321-43da-a382-e142e15c09e0",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "b7c9ccaa-f73d-4172-828f-52bc6089cc53",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "70bd933e-1b05-4fc4-9144-d4a3553c4e6f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "1a830d58-2a71-4070-911e-87ab45b09f17",
    "fields": {
        "created_at": "2017-12-01T14:16:48.958Z",
        "updated_at": "2017-12-06T04:11:07.942Z",
        "identifier": 37,
        "youtube_video_id": "5N4VKYw_0Iw",
        "title": "Implementando uma rota que retorna os detalhes de um arquivo no formato JSON",
        "part": 12,
        "description": "T\u00cdTULO:\r\nParte 12: Implementando uma rota que retorna os detalhes de um arquivo no formato JSON\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo adicionei uma nova rota ao sistema que retorna um JSON com os detalhes de um arquivo. Implementamos essa view usando como guia um teste unit\u00e1rio (TDD - criando os testes antes da implementa\u00e7\u00e3o).\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Roteiro: https://github.com/fernandoe/fe-arquivo-server/issues/14\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/c5e32244325f4584c33b1b7dc68afeee9ea6004a\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/c/CodigoAbertoTV?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, django-rest-framework, serializer, apiview, json, fe-arquivo-server",
        "slug": "parte-12-implementando-uma-rota-que-retorna-os-detalhes-de-um-arquivo-no-formato-json",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "195786c0-f499-42e4-bf9a-ac372a1a5959",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "7c21cfc6-5b70-4d0c-8d26-0d94f05783ba",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "be9cc7cb-3f40-46e8-8f30-f1ced2ccfcd1",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "9628c28b-a0dc-4f7c-ad56-1ad64c1e13aa",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "1ef1a0e0-95f8-48ae-942b-bd9ad1318a49",
    "fields": {
        "created_at": "2017-11-29T16:15:03.618Z",
        "updated_at": "2017-12-06T04:16:45.514Z",
        "identifier": 30,
        "youtube_video_id": "hBQe-XTDM-o",
        "title": "Cria\u00e7\u00e3o da app de healthcheck",
        "part": 5,
        "description": "T\u00cdTULO:\r\nParte 6: Cria\u00e7\u00e3o da rota de healthcheck\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fiz a cria\u00e7\u00e3o da rota de /healthcheck usando TDD (criando o teste antes da implementa\u00e7\u00e3o). Tamb\u00e9m usamos dentro do teste um patch para simular um erro no banco de dados e assim ter uma cobertura maior de c\u00f3digo.\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Os demais v\u00eddeos podem ser acessados pelos links logo abaixo.\r\n\r\n\r\nROTEIRO:\r\nhttps://github.com/fernandoe/fe-arquivo-server/issues/7\r\n\r\n\r\nCANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-arquivo-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-arquivo-server/commit/c7bccb3ec03dd84ff3108deed637da369533a7a5\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, fe-arquivo-server",
        "slug": "parte-05-criacao-da-app-de-healthcheck",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "22086993-81a2-4c83-9bb8-6992a5933568",
    "fields": {
        "created_at": "2017-11-29T16:12:10.282Z",
        "updated_at": "2017-12-06T04:18:07.442Z",
        "identifier": 28,
        "youtube_video_id": "LQ02Evl4i0Y",
        "title": "Automatizando o deploy com git push (push-to-deploy)",
        "part": 3,
        "description": "T\u00cdTULO:\r\nParte 3: Automatizando o deploy com git push (push-to-deploy)\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fizemos a configura\u00e7\u00e3o do deploy usando git push (push-to-deploy) para um servidor dentro da Dreamhost. Fizemos todo o processo do zero, configura\u00e7\u00f5es no servidor e no projeto, instala\u00e7\u00f5es de depend\u00eancias e ferramentas para o gerenciamento de virtualenvs. No final deixamos a aplica\u00e7\u00e3o funcionando dentro do dom\u00ednio: https://arquivo.fe.fernandoe.com\r\n\r\n\r\nROTEIRO:\r\nhttps://github.com/fernandoe/fe-arquivo-server/issues/3\r\n\r\n\r\nCANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-arquivo-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-arquivo-server/commit/8c2f14c7825ae0675a632c5c123f35d1e5c4933a\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, dreamhost, git, deploy, pyenv, virtualenv, virtualenvwrapper, fe-arquivo-server",
        "slug": "parte-03-automatizando-o-deploy-com-git-push-push-to-deploy",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "a5857af4-51b4-4541-a464-9c691e979eee",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "9371ba23-b321-43da-a382-e142e15c09e0",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "6bc1e7c9-9877-454b-a5b7-8a44cef9a879",
            "1a3c819f-866b-4bb5-a81c-6f5682c50ce8",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "abbe7294-1d37-401a-86d7-90b2b00a004f",
            "09d6bcf4-9dfa-4db5-84b6-51f59429b264"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "29103cbb-ccd3-4787-9de3-63bfa695d0ef",
    "fields": {
        "created_at": "2017-12-01T14:16:23.952Z",
        "updated_at": "2017-12-06T04:13:00.430Z",
        "identifier": 35,
        "youtube_video_id": "rioUfTTf8t0",
        "title": "Criando o serializer para o modelo de arquivo com o Django REST Framework",
        "part": 10,
        "description": "T\u00cdTULO:\r\nParte 10: Criando o serializer para o modelo de arquivo com o Django REST Framework\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fiz a cria\u00e7\u00e3o do serializer para o modelo de arquivo. Serializares s\u00e3o respons\u00e1veis por muitas coisas e uma delas \u00e9 a representa\u00e7\u00e3o da inst\u00e2ncia de um objeto em um json. Servem tamb\u00e9m para a valida\u00e7\u00e3o de campos do objeto, s\u00e3o semelhantes aos 'Form' e 'ModelForm' do Django. Implementamos esse serializar usando como guia um teste unit\u00e1rio (TDD - criando os testes antes da implementa\u00e7\u00e3o).\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Roteiro: https://github.com/fernandoe/fe-arquivo-server/issues/12\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/dd142e5a605f320d39d69b2168fab544bce1a3d0\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/c/CodigoAbertoTV?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, django-rest-framework, serializers, fe-arquivo-server",
        "slug": "parte-10-criando-o-serializer-para-o-modelo-de-arquivo-com-o-django-rest-framework",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "7c21cfc6-5b70-4d0c-8d26-0d94f05783ba",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "9628c28b-a0dc-4f7c-ad56-1ad64c1e13aa",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "291abf41-20dd-4ef1-9b7e-812f194c1581",
    "fields": {
        "created_at": "2017-12-04T15:42:04.853Z",
        "updated_at": "2017-12-06T04:06:25.493Z",
        "identifier": 16,
        "youtube_video_id": "VG-gQ3e0L3Y",
        "title": "Configurando o Django para enviar emails pela Dreamhost",
        "part": 11,
        "description": "Nesse v\u00eddeo configuramos o Django para enviar emails para os admins do site quando uma requisi\u00e7\u00e3o em um endere\u00e7o falhar. Lembrando que as verifica\u00e7\u00f5es rodam de 10 em 10 minutos por uma CronJob cadastrada no Dreamhost.\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/03c9c73b1ba0452f3c5a2c950936f2df0686f44b\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nTAGS:\r\npython, django, dreamhost, email, settings, fe-healthcheck-server",
        "slug": "parte-11-configurando-o-django-para-enviar-emails-pela-dreamhost",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "9371ba23-b321-43da-a382-e142e15c09e0",
            "67978a94-b87e-461a-a8e4-cf3e5e594e66",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "70bd933e-1b05-4fc4-9144-d4a3553c4e6f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "2d3b6488-4ea6-4764-b9fb-f968f25a042f",
    "fields": {
        "created_at": "2017-12-04T15:43:43.998Z",
        "updated_at": "2017-12-06T04:00:31.219Z",
        "identifier": 21,
        "youtube_video_id": "vh4NqvYMeCs",
        "title": "Integrando a biblioteca pytest ao projeto",
        "part": 16,
        "description": "Nesse v\u00eddeo fiz a configura\u00e7\u00e3o da biblioteca pytest para executar os testes do projeto. Tamb\u00e9m adicionamos o comando no Makefile para facilitar a execu\u00e7\u00e3o dentro do CI.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/77134f5e6a78811a978ab1d9c0145dff9c6fadaa\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-16-integrando-a-biblioteca-pytest-ao-projeto",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "76507eaa-f468-492e-bb8f-5c75ba6ad4e0",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "335a000b-0697-4bd0-bc32-2ea14c826502",
    "fields": {
        "created_at": "2017-12-04T15:39:56.886Z",
        "updated_at": "2017-12-06T03:49:28.030Z",
        "identifier": 10,
        "youtube_video_id": "8owrtTyLSOg",
        "title": "Escrevendo um comando customizado no django-admin",
        "part": 5,
        "description": "Nesse v\u00eddeo escrevemos um comando customizado do django-admin que \u00e9 executado com o manage.py para executar a verifica\u00e7\u00e3o das URLs cadastradas e ativas dentro do sistema.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/8de27e73ed693cee425a1346bb562aecc3eebc64\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-05-escrevendo-um-comando-customizado-no-django-admin",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "5d600cb2-665f-4c49-bbec-b152cdee3acc",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "814849be-570b-4691-8e3b-e682e7e0d762",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "33863dd0-24fb-4460-9058-736c9520cf10",
    "fields": {
        "created_at": "2017-12-01T14:11:18.335Z",
        "updated_at": "2017-12-06T04:16:12.033Z",
        "identifier": 31,
        "youtube_video_id": "pzNVfuiEMEw",
        "title": "Cria\u00e7\u00e3o da rota de healthcheck",
        "part": 6,
        "description": "Nesse v\u00eddeo fiz a cria\u00e7\u00e3o da rota de /healthcheck usando TDD (criando o teste antes da implementa\u00e7\u00e3o). Tamb\u00e9m usamos dentro do teste um patch para simular um erro no banco de dados e assim ter uma cobertura maior de c\u00f3digo.\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Os demais v\u00eddeos podem ser acessados pelos links logo abaixo.\r\n\r\n\r\nROTEIRO:\r\nhttps://github.com/fernandoe/fe-arquivo-server/issues/7\r\n\r\n\r\nCANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-arquivo-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-arquivo-server/commit/c7bccb3ec03dd84ff3108deed637da369533a7a5\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, fe-arquivo-server",
        "slug": "parte-06-criacao-da-rota-de-healthcheck",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "3c184a2b-250c-48ed-a19c-58e031452683",
    "fields": {
        "created_at": "2017-12-04T15:43:24.239Z",
        "updated_at": "2017-12-06T04:01:09.594Z",
        "identifier": 20,
        "youtube_video_id": "7PU8LSjDmdk",
        "title": "Automatizando o deploy do projeto com Travis para a Dreamhost",
        "part": 15,
        "description": "Nesse v\u00eddeo fiz a configura\u00e7\u00e3o do projeto no Travis para o deploy autom\u00e1tico da sua \u00faltima vers\u00e3o quando um novo commit for identificado. Vale lembrar que o deploy s\u00f3 acontece se todos os testes da aplica\u00e7\u00e3o executarem com sucesso. O deploy vai para um server dentro da Dreamhost.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento.Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nCOMMITS:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/766031ee04a4508d5091b87a3a1dfbea17cf8260\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/cfca6c72618956cd976600d7254dab67899b7625\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/bf5ec18f713bd714eae8d3130cb4a264d5ac0645\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nTAGS:\r\npython, django, travis, deploy, dreamhost, fe-healthcheck-server",
        "slug": "parte-15-automatizando-o-deploy-do-projeto-com-travis-para-a-dreamhost",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "a5857af4-51b4-4541-a464-9c691e979eee",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "9371ba23-b321-43da-a382-e142e15c09e0",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "c9bff618-cac4-4244-b889-86f13093cff8"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "3d7caa11-c21b-44eb-b580-48ab45786f80",
    "fields": {
        "created_at": "2017-12-01T14:15:52.042Z",
        "updated_at": "2017-12-06T04:15:34.769Z",
        "identifier": 32,
        "youtube_video_id": "Et0MpuoiVms",
        "title": "Cria\u00e7\u00e3o da app de arquivo",
        "part": 7,
        "description": "T\u00cdTULO:\r\nParte 7: Cria\u00e7\u00e3o da app de arquivo\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fiz a cria\u00e7\u00e3o da app de arquivo. \u00c9 um v\u00eddeo bem r\u00e1pido mostrando como criar uma app no django. Esta app vai conter todas as rotas e views que v\u00e3o gerenciar o upload e download de arquivos do nosso servi\u00e7o.\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Os demais v\u00eddeos podem ser acessados pelos links logo abaixo.\r\n\r\n\r\nROTEIRO:\r\nhttps://github.com/fernandoe/fe-arquivo-server/issues/8\r\n\r\n\r\nCANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-arquivo-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-arquivo-server/commit/a7d920ad4b4bf6aa84df663bd86986897f339835\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, startapp, fe-arquivo-server",
        "slug": "parte-07-criacao-da-app-de-arquivo",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "3d65e0ae-b3bb-4f99-a219-5946ed91821c"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "425c5bb7-1e3a-42aa-8414-5becbd0a3ecc",
    "fields": {
        "created_at": "2017-12-04T15:43:03.595Z",
        "updated_at": "2017-12-06T04:01:47.017Z",
        "identifier": 19,
        "youtube_video_id": "B7ulgCKVnq8",
        "title": "Adicionando um Makefile para executar os comandos mais usados do projeto",
        "part": 14,
        "description": "Nesse v\u00eddeo adicionamos um dos recursos mais antigos que o Linux possue, um arquivo Makefile com os comandos mais usados do projeto. Facilitando a opera\u00e7\u00e3o e execu\u00e7\u00e3o de suas tarefas.\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/032808df6cb4125398398b474356aa8580ebc516\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-14-adicionando-um-makefile-para-executar-os-comandos-mais-usados-do-projeto",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "a5857af4-51b4-4541-a464-9c691e979eee",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "878acb15-2f0f-4377-81c2-f40dc4abdf77",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "434e64f7-35bc-44de-b06e-ad834dc97913",
    "fields": {
        "created_at": "2017-12-04T15:37:51.369Z",
        "updated_at": "2017-12-06T03:41:04.754Z",
        "identifier": 6,
        "youtube_video_id": "KwTozmJJ0_o",
        "title": "Cria\u00e7\u00e3o do projeto Django b\u00e1sico",
        "part": 1,
        "description": "Nesse v\u00eddeo fiz a configura\u00e7\u00e3o inicial do projeto Django que vamos usar para desenvolver o servi\u00e7o.\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-healthcheck-server\r\n- Commit: https://github.com/fernandoe/fe-healthcheck-server/commit/c8edcbd1c2e49a3ba969c248dd74ebd06916b43b\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/c/CodigoAbertoTV?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nTAGS:\r\npython, django, startproject, virtualenv, fe-healthcheck-server",
        "slug": "parte-01-criacao-do-projeto-django-basico",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "493190e5-36c7-40f7-aa18-a23001547979",
            "abbe7294-1d37-401a-86d7-90b2b00a004f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "48156862-0771-4819-954b-1e6e473826d3",
    "fields": {
        "created_at": "2017-12-04T15:44:22.957Z",
        "updated_at": "2017-12-06T03:58:59.118Z",
        "identifier": 23,
        "youtube_video_id": "3tUh3ZhTd8I",
        "title": "Enviando o relat\u00f3rio de cobertura para o coveralls.io",
        "part": 18,
        "description": "Nesse v\u00eddeo fiz a configura\u00e7\u00e3o do envio do relat\u00f3rio de cobertura para o servi\u00e7o do https://coveralls.io e tamb\u00e9m configuramos o badge que mostra o percentual de cobertura na p\u00e1gina inicial do projeto no github.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nCOMMITS:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/12ac0fe987747fa95778af1169a5355e211249f2\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/fbd8773e97de891ece68cf4171953a821ccca8c5\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/5a26a1ed9d1ba6dcf3402fed8b6a143310d4142b\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-18-enviando-o-relatorio-de-cobertura-para-o-coverallsio",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "d449b0d5-52f3-41a6-906e-06daaa41292f",
            "659a436e-70f3-44d7-a038-ed7531d50de3",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "521be073-2ee9-434d-9f5e-9c4113e35fbe",
    "fields": {
        "created_at": "2017-12-01T14:16:10.343Z",
        "updated_at": "2017-12-06T04:14:08.621Z",
        "identifier": 34,
        "youtube_video_id": "g6jetkHCWIw",
        "title": "Criando o modelo de Arquivo",
        "part": 9,
        "description": "T\u00cdTULO:\r\nParte 9: Criando o modelo de Arquivo\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fiz a cria\u00e7\u00e3o do modelo de dados de Arquivo, que ser\u00e1 um apontador para cara arquivo f\u00edsico em disco. Implementamos o modelo usando como guia um teste unit\u00e1rio (TDD - criando os testes antes da implementa\u00e7\u00e3o).\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Roteiro: https://github.com/fernandoe/fe-arquivo-server/issues/10\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/2734f7c63d183a84985440c2c3c0f2612794a963\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, models, makemigrations, migrations, fe-arquivo-server",
        "slug": "parte-09-criando-o-modelo-de-arquivo",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "f4c5234c-3c21-4840-a89b-3012827e9ef7",
            "9ea7d181-eb34-4794-838c-5514277d9254",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "ed3f6041-b17b-4606-8928-658bb17896c1",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "52ecc3d0-ff9f-46e6-b217-051775531968",
    "fields": {
        "created_at": "2017-12-04T15:40:36.046Z",
        "updated_at": "2017-12-06T03:52:52.185Z",
        "identifier": 12,
        "youtube_video_id": "fAGEuq-MpdA",
        "title": "Criando um dom\u00ednio do DH e fazendo um deploy com git",
        "part": 7,
        "description": "Nesse v\u00eddeo criamos um dom\u00ednio para o nosso servi\u00e7o dentro do Dreamhost, realizamos a configura\u00e7\u00e3o do deploy da aplica\u00e7\u00e3o usando git e tamb\u00e9m fizemos o deploy da aplica\u00e7\u00e3o deixando ela funcionando no dom\u00ednio criado.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMITS:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/301500649888084132d35dc8f138a4ccf01536c7\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/7d2d445bee094ac70e604dc3878e3febd2c6282b\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/6792bf2017625ec0b2ac5ff1279e3a98feedf38c\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-07-criando-um-dominio-do-dh-e-fazendo-um-deploy-com-git",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "a5857af4-51b4-4541-a464-9c691e979eee",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "9371ba23-b321-43da-a382-e142e15c09e0",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6bc1e7c9-9877-454b-a5b7-8a44cef9a879",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "5f1f3569-a77f-47b2-b1bd-e5a41affe6f5",
    "fields": {
        "created_at": "2017-12-01T14:16:36.462Z",
        "updated_at": "2017-12-06T04:12:14.590Z",
        "identifier": 36,
        "youtube_video_id": "7Q2AuR_HVdM",
        "title": "Retornando um JSON com um ModelSerializer na rota de upload de arquivo",
        "part": 11,
        "description": "T\u00cdTULO:\r\nParte 11: Retornando um JSON com um ModelSerializer na rota de upload de arquivo\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo alterei o retorno da APIView de upload de arquivo para retornar um JSON com os dados do arquivo que foi feito upload. Implementamos essa view usando como guia um teste unit\u00e1rio (TDD - criando os testes antes da implementa\u00e7\u00e3o).\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Roteiro: https://github.com/fernandoe/fe-arquivo-server/issues/13\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/c590edc786d41f19463161e8528ba6668b0759de\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/c/CodigoAbertoTV?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, django-rest-framework, serializer, apiview, fe-arquivo-server",
        "slug": "parte-11-retornando-um-json-com-um-modelserializer-na-rota-de-upload-de-arquivo",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "195786c0-f499-42e4-bf9a-ac372a1a5959",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "7c21cfc6-5b70-4d0c-8d26-0d94f05783ba",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "9628c28b-a0dc-4f7c-ad56-1ad64c1e13aa",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "6e4ebe2d-777a-4a49-bd30-d4b009657d1a",
    "fields": {
        "created_at": "2017-12-04T15:44:44.786Z",
        "updated_at": "2017-12-06T03:58:01.770Z",
        "identifier": 24,
        "youtube_video_id": "pENyk4j6lBw",
        "title": "Simulando requisi\u00e7\u00f5es com requests-mock",
        "part": 19,
        "description": "Um dos grandes problemas na elabora\u00e7\u00e3o de testes unit\u00e1rios \u00e9 a depend\u00eancia de servi\u00e7os externos. Se algum servi\u00e7o estiver fora do ar quando nossos testes forem executados, o nosso build pode falhar mesmo com o nosso c\u00f3digo correto. Para evitar esse problema, explicamos o uso da biblioteca requests-mock para simular a requisi\u00e7\u00e3o HTTP para o servi\u00e7o externo, tirando assim essa depend\u00eancia do teste unit\u00e1rio.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/efcf2961a2a3f4a258c644e5a8132014dcd45a07\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-19-simulando-requisicoes-com-requests-mock",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "e8e10d90-6b9e-4dbd-b2d8-164f1ba2452b",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "79b09310-2375-4614-976b-0f5013679bdf",
    "fields": {
        "created_at": "2017-12-04T15:40:16.003Z",
        "updated_at": "2017-12-06T03:50:40.295Z",
        "identifier": 11,
        "youtube_video_id": "e5zmTQUiKCM",
        "title": "Enviando emails quando uma verifical\u00e7\u00e3o de URL falhar",
        "part": 6,
        "description": "Nesse v\u00eddeo vamos codificar o envio de um email para os administradores do sistema quando uma verifica\u00e7\u00e3o de uma URL falhar. Implementamos usando um signal do tipo post_save e o engine de templates do Django para formatar o e-mail.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/e0e687ef12917e13a41ea9d5230b88296855cc64\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nTAGS:\r\npython, django, email, signals, templates, fe-healthcheck-server",
        "slug": "parte-06-enviando-emails-quando-uma-verificalcao-de-url-falhar",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "67978a94-b87e-461a-a8e4-cf3e5e594e66",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "76ac88cf-3692-4a08-b3cf-1cf0ca4c843d",
            "1424fc07-bccc-4945-81d5-be93eb0bcf1b"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "81cb793c-2d49-4784-91a0-001b73b0ba4d",
    "fields": {
        "created_at": "2017-12-04T15:41:16.217Z",
        "updated_at": "2017-12-06T03:54:22.019Z",
        "identifier": 14,
        "youtube_video_id": "bcJbXxK3tfM",
        "title": "Separa\u00e7\u00e3o do arquivo de settings para suportar desenvolvimento e produ\u00e7\u00e3o",
        "part": 9,
        "description": "Nesse v\u00eddeo separamos o arquivo de settings do django para suportar dois ambientes (desenvolvimento e produ\u00e7\u00e3o).\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/7520335fc8238c9b412ea09515c40f33527c65bd\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-09-separacao-do-arquivo-de-settings-para-suportar-desenvolvimento-e-producao",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "70bd933e-1b05-4fc4-9144-d4a3553c4e6f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "81d05242-42ec-4c2c-b859-e8a7024d4b43",
    "fields": {
        "created_at": "2017-12-01T14:15:56.871Z",
        "updated_at": "2017-12-06T04:15:06.878Z",
        "identifier": 33,
        "youtube_video_id": "JBNYHfcY8SI",
        "title": "Implementando uma rota para receber o upload de arquivos",
        "part": 8,
        "description": "T\u00cdTULO:\r\nParte 8: Implementando uma rota para receber o upload de arquivos\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fiz a cria\u00e7\u00e3o de uma rota para receber o upload de arquivos usando TDD (criando os testes antes da implementa\u00e7\u00e3o). Usamos tamb\u00e9m mocks para simular o salvamento do arquivo no disco e com isso n\u00e3o salvar fisicamente os arquivos na hora da execu\u00e7\u00e3o do teste.\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Roteiro: https://github.com/fernandoe/fe-arquivo-server/issues/9\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/cffdd637b5d3e1fab25906b70cd21bdb1c8b6497\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, upload, storage, fe-arquivo-server",
        "slug": "parte-08-implementando-uma-rota-para-receber-o-upload-de-arquivos",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "8e47b7a5-4f5d-4645-a178-d2d299c142ef",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f",
            "4e05a8b4-a74d-4312-bcdd-01ac5b979fcd"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "9bce9e7d-3217-4622-956d-7ec46d57d5ca",
    "fields": {
        "created_at": "2017-12-04T15:39:07.590Z",
        "updated_at": "2017-12-06T12:54:30.454Z",
        "identifier": 8,
        "youtube_video_id": "IjFbIOFKm3k",
        "title": "Configura\u00e7\u00e3o do Django Admin para os modelos da aplica\u00e7\u00e3o",
        "part": 3,
        "description": "Nesse v\u00eddeo adicionei a configura\u00e7\u00e3o dos dois modelos (Endereco e Verificacao) no Django Admin.\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-healthcheck-server\r\n- Commit: https://github.com/fernandoe/fe-healthcheck-server/commit/dba30870e65f5adb8c005e0b198fd053e0ad1200\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://codigoaberto.tv\r\n\r\n\r\nTAGS:\r\npython, django, django-admin, fe-healthcheck-server",
        "slug": "parte-03-configuracao-do-django-admin-para-os-modelos-da-aplicacao",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "814849be-570b-4691-8e3b-e682e7e0d762",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "9caa80b6-48e4-4a82-a17d-49a6181b30a0",
    "fields": {
        "created_at": "2017-12-04T15:44:05.217Z",
        "updated_at": "2017-12-06T03:59:48.504Z",
        "identifier": 22,
        "youtube_video_id": "gc5xSmYtHQI",
        "title": "Integrando a biblioteca Coverage.py e pytest-cov ao projeto",
        "part": 17,
        "description": "Nesse v\u00eddeo fiz a configura\u00e7\u00e3o da biblioteca de Coverage.py e pytest-cov ao projeto. Essas bibliotecas habilitam a cria\u00e7\u00e3o de relat\u00f3rios sobre a cobertura de testes unit\u00e1rios do projeto.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/44e9f6562ad4f4723cc97d61121f50717e71f19f\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-17-integrando-a-biblioteca-coveragepy-e-pytest-cov-ao-projeto",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "d449b0d5-52f3-41a6-906e-06daaa41292f",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "a16b7374-b021-4795-afc0-b64caeefa04a",
    "fields": {
        "created_at": "2017-12-04T15:39:30.732Z",
        "updated_at": "2017-12-06T03:48:47.959Z",
        "identifier": 9,
        "youtube_video_id": "5KqTzzr0DhI",
        "title": "Adicionado m\u00e9todo que verifica se a URL do endere\u00e7o est\u00e1 funcionando",
        "part": 4,
        "description": "Nesse v\u00eddeo adicionei um m\u00e9todo que verifica se a URL do endere\u00e7o est\u00e1 funcionando, ela adiciona um registro no banco com o resultado.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/536beaec041e79bc288290f58e545e968accf8ca\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-04-adicionado-metodo-que-verifica-se-a-url-do-endereco-esta-funcionando",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "1b1a3105-e916-4872-8697-905ad768b0ab",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "a87c0e91-20b0-40e7-b2d8-cc7e356f3467",
    "fields": {
        "created_at": "2017-12-04T15:45:05.622Z",
        "updated_at": "2017-12-06T03:57:05.640Z",
        "identifier": 25,
        "youtube_video_id": "zXi--Qbj3AI",
        "title": "Integrando o requires.io para monitorar as libs do projeto",
        "part": 20,
        "description": "Nesse v\u00eddeo explico como integrar o servi\u00e7o https://requires.io para monitorar as bibliotecas do projeto, ele verifica a vers\u00e3o das libs dentro dos arquivos de requirements e informa se alguma esta desatualizada. Tamb\u00e9m colocamos um badge com essa informa\u00e7\u00e3o na p\u00e1gina principal do projeto dentro do github.\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/a918ea456cb78bd736f4a3b4aa319d9c7bfa164e\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-20-integrando-o-requiresio-para-monitorar-as-libs-do-projeto",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "7db0e6a9-ab30-4e8e-abe9-186eaf01c206",
            "5a661ca5-e2fd-4f03-8411-010b4eef7bcf"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "b02095c7-912f-4196-be87-4d7cd4d92d2a",
    "fields": {
        "created_at": "2017-11-29T16:11:29.166Z",
        "updated_at": "2017-12-06T04:18:40.904Z",
        "identifier": 27,
        "youtube_video_id": "5PQbxuK2pH4",
        "title": "Configurando o Travis para a Integra\u00e7\u00e3o Cont\u00ednua do Projeto",
        "part": 2,
        "description": "T\u00cdTULO:\r\nParte 2: Configurando o Travis para a Integra\u00e7\u00e3o Cont\u00ednua do Projeto\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fiz a configura\u00e7\u00e3o do projeto para usar o Travis como o servi\u00e7o de integra\u00e7\u00e3o cont\u00ednua, assim todo commit dentro do reposit\u00f3rio ir\u00e1 disparar um job no Travis que vai testar as modifica\u00e7\u00f5es e garantir que nada quebrar\u00e1 dentro do nosso projeto.\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/d3a2073527c62953e5c0646bba88f21b6362be59\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nTAGS:\r\npython, django, travis, ci, fe-arquivo-server",
        "slug": "parte-02-configurando-o-travis-para-a-integracao-continua-do-projeto",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "eb2f3a6a-6ca1-43e3-8039-230ec13174c2",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "c9bff618-cac4-4244-b889-86f13093cff8"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "bc352eb1-c0d6-4355-b332-840cf3839faa",
    "fields": {
        "created_at": "2017-12-04T15:42:25.425Z",
        "updated_at": "2017-12-06T04:05:52.403Z",
        "identifier": 17,
        "youtube_video_id": "6ol1NPx1qew",
        "title": "Configurando o Django para logar em um arquivo (logging)",
        "part": 12,
        "description": "Nesse v\u00eddeo configuramos o log do Django, agora estamos logando em um arquivo dentro do servidor da Dreamhost e enviando emails para os administradores quando um erro acontecer com o stacktrace do problema.\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/98e304a37084060cb8b561fd09fb5903e0dfad01\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nTAGS:\r\npython, django, logging, log, settings, dreamhost, fe-healthcheck-server",
        "slug": "parte-12-configurando-o-django-para-logar-em-um-arquivo-logging",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "9371ba23-b321-43da-a382-e142e15c09e0",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6cf6b688-f657-4e0f-955e-29daf4011969",
            "044969ee-0ec0-4357-a73e-8fee9d5b5611",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "70bd933e-1b05-4fc4-9144-d4a3553c4e6f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "c87799c1-19e2-42f7-b044-477b7af6fcff",
    "fields": {
        "created_at": "2017-12-01T14:17:15.676Z",
        "updated_at": "2017-12-06T04:08:18.111Z",
        "identifier": 39,
        "youtube_video_id": "_dRBGV53WRA",
        "title": "Integrando a biblioteca factory_boy ao projeto",
        "part": 14,
        "description": "T\u00cdTULO:\r\nParte 14: Integrando a biblioteca factory_boy ao projeto\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo integramos a biblioteca factory_boy ao nosso projeto Django e refatoramos os testes unit\u00e1rios para criar os modelos de testes com ela.\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-arquivo-server\r\n- Roteiro: https://github.com/fernandoe/fe-arquivo-server/issues/17\r\n- Commit: https://github.com/fernandoe/fe-arquivo-server/commit/aca480cbf39ddeadc637d99dd17489b15a6fca6a\r\n\r\n\r\nINSCREVER-SE NO CANAL:\r\nhttps://www.youtube.com/c/CodigoAbertoTV?sub_confirmation=1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, tdd, unit-test, mock, patch, django-rest-framework, factory-boy, refactory, fe-arquivo-server",
        "slug": "parte-14-integrando-a-biblioteca-factory_boy-ao-projeto",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "7c21cfc6-5b70-4d0c-8d26-0d94f05783ba",
            "8bb6280f-e102-4b65-b188-1a5fb2c5e6d4",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "3dba3ac3-8139-4f68-80cf-c94f19c94aac",
            "f03f7102-b41d-4831-85b2-d0ced101354a",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "a7b35e93-6321-4290-a091-581500bdac39",
            "9e9b82ea-1e43-458c-a8c7-47241ae630af",
            "873255d4-cf77-4336-871a-16c1636e041f"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "c925689d-3f93-4f34-935f-ec117dc14d18",
    "fields": {
        "created_at": "2017-12-04T15:38:34.568Z",
        "updated_at": "2017-12-06T03:45:24.900Z",
        "identifier": 7,
        "youtube_video_id": "h8X7cDDgpMs",
        "title": "Cria\u00e7\u00e3o da app de healthcheck e seus modelos",
        "part": 2,
        "description": "Nesse v\u00eddeo adicionei a aplica\u00e7\u00e3o de healthcheck e seus dois modelos (Endereco e Verificacao) junto com seus arquivos de migra\u00e7\u00e3o.\r\n\r\nLembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando em projetos pessoais. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\n\r\nhttps://goo.gl/xNmqrF\r\n\r\n\r\nLINKS:\r\n- Projeto: https://github.com/fernandoe/fe-healthcheck-server\r\n- Commit: https://github.com/fernandoe/fe-healthcheck-server/commit/2d3aac119bb71dd1636794bce2674f53ce43a3b1\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-02-criacao-da-app-de-healthcheck-e-seus-modelos",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "f4c5234c-3c21-4840-a89b-3012827e9ef7",
            "c1ab8ba4-4b49-49da-b01c-9bbfde8190e6",
            "ed3f6041-b17b-4606-8928-658bb17896c1",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413",
            "3d65e0ae-b3bb-4f99-a219-5946ed91821c"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "e7d9120e-eb9c-45c3-9b9f-2034c404f5a8",
    "fields": {
        "created_at": "2017-12-04T15:42:44.100Z",
        "updated_at": "2017-12-06T04:04:57.857Z",
        "identifier": 18,
        "youtube_video_id": "jF9ENjMDIuM",
        "title": "Adicionando uma coluna customizada no django-admin",
        "part": 13,
        "description": "Nesse v\u00eddeo adicionamos uma coluna customizada indicando o \u00faltimo resultada da verifica\u00e7\u00e3o do modelo de Endere\u00e7o dentro do Django Admin.\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9eneYX950jlgBHfZM9SC2bJfP\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-healthcheck-server\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-healthcheck-server/commit/820cca2ebcc8668ea93261ed5fa11565551ddca0\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/c/CodigoAbertoTV\r\nhttps://fb.me/codigo.aberto.tv\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttp://codigoaberto.tv",
        "slug": "parte-13-adicionando-uma-coluna-customizada-no-django-admin",
        "playlists": [
            "f9f7dd93-211c-4d85-a1d3-c636381566b0"
        ],
        "tags": [
            "e21a09db-0fa3-4832-8c28-af2446c07744",
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "814849be-570b-4691-8e3b-e682e7e0d762",
            "d2ca670a-0a9d-4b37-b6fe-5828c52179f4",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413"
        ]
    }
},
{
    "model": "catv.video",
    "pk": "efdf04a2-0f96-4e2b-a932-cb5dc47d8c9f",
    "fields": {
        "created_at": "2017-11-29T16:14:27.456Z",
        "updated_at": "2017-12-06T04:17:06.296Z",
        "identifier": 29,
        "youtube_video_id": "jFNEAJOfUM4",
        "title": "Instala\u00e7\u00e3o e configura\u00e7\u00e3o do django-rest-framework",
        "part": 4,
        "description": "T\u00cdTULO:\r\nParte 4: Instala\u00e7\u00e3o e configura\u00e7\u00e3o do django-rest-framework\r\n\r\n\r\nDESCRI\u00c7\u00c3O:\r\nNesse v\u00eddeo fizemos a instala\u00e7\u00e3o e configura\u00e7\u00e3o do Django REST framework, e instala\u00e7\u00e3o de mais algumas libs para testes e utiliza\u00e7\u00e3o do console. Lembrando que esse v\u00eddeo pertence a uma s\u00e9rie de todo o trabalho que eu venho realizando nesse projeto. Os demais v\u00eddeos podem ser acessados pelos links logo abaixo.\r\n\r\n\r\nROTEIRO:\r\nhttps://github.com/fernandoe/fe-arquivo-server/issues/5\r\n\r\n\r\nCANAL:\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\n\r\n\r\nPROJETO:\r\nhttps://github.com/fernandoe/fe-arquivo-server\r\n\r\n\r\nTODOS OS V\u00cdDEOS DESSE PROJETO\r\nEsse v\u00eddeo faz parte de uma s\u00e9rie onde venho gravando o trabalho real em meus projetos pessoais, ele n\u00e3o \u00e9 um treinamento. Para ver todos os v\u00eddeos desse projeto acesse o link abaixo:\r\nhttps://www.youtube.com/playlist?list=PLSlZ5nyl9enf-kRYiVVliz2esE3ukcgVJ\r\n\r\n\r\nCOMMIT:\r\nhttps://github.com/fernandoe/fe-arquivo-server/commit/e4de46a5a83afb533cb9b4467eac50a0a0864446\r\n\r\n\r\nSEGUE L\u00c1 (Uma das melhores formas de apoiar esse trabalho \u00e9 curtir/seguir/assinar/compartilhar minhas redes sociais):\r\nhttps://www.youtube.com/channel/UCyHuz50Ce8LuiHOj07y9ZIQ\r\nhttps://fb.me/streaming.programming\r\nhttps://twitter.com/feresp\r\nhttps://github.com/fernandoe\r\nhttps://fernandoe.com\r\n\r\n\r\nSLACK:\r\nQuer bater um papo mais interativo? Tirar alguma d\u00favida? Dar alguma sugest\u00e3o? Entre no canal do slack usando o link abaixo e venha bater um papo...\r\nhttps://goo.gl/DD1q9w\r\n\r\n\r\nTAGS:\r\npython, django, django-rest-framework, fe-arquivo-server",
        "slug": "parte-04-instalacao-e-configuracao-do-django-rest-framework",
        "playlists": [
            "f38a83d3-3f17-43a3-bdf7-759eb276e395"
        ],
        "tags": [
            "93d3fe01-61cf-4f84-9e90-27a0f137fa0d",
            "7c21cfc6-5b70-4d0c-8d26-0d94f05783ba",
            "28b7a8fe-76f1-435a-9c8d-b1934ac41571",
            "6d4bb3d6-cb87-42a7-ba84-3aa5dff92413"
        ]
    }
}
]
